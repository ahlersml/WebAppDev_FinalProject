// <auto-generated />
using System;
using GenreSchedule.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassSchedule.Migrations
{
    [DbContext(typeof(GenreScheduleContext))]
    partial class GenreScheduleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GenreSchedule.Models.Date", b =>
                {
                    b.Property<int>("DateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("DateId");

                    b.ToTable("Dates");

                    b.HasData(
                        new
                        {
                            DateId = 1,
                            Name = "Monday"
                        },
                        new
                        {
                            DateId = 2,
                            Name = "02/02/2022"
                        },
                        new
                        {
                            DateId = 3,
                            Name = "Wednesday"
                        },
                        new
                        {
                            DateId = 4,
                            Name = "Thursday"
                        },
                        new
                        {
                            DateId = 5,
                            Name = "Friday"
                        },
                        new
                        {
                            DateId = 6,
                            Name = "Saturday"
                        },
                        new
                        {
                            DateId = 7,
                            Name = "Sunday"
                        });
                });

            modelBuilder.Entity("GenreSchedule.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateId")
                        .HasColumnType("int");

                    b.Property<int>("RenterId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("GenreId");

                    b.HasIndex("DateId");

                    b.HasIndex("RenterId");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 1,
                            RenterId = 1,
                            Title = "Avengers Endgame",
                            genre = "Action"
                        },
                        new
                        {
                            GenreId = 2,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 2,
                            RenterId = 1,
                            Title = "A Walk to Remember",
                            genre = "Drama"
                        },
                        new
                        {
                            GenreId = 3,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 4,
                            RenterId = 4,
                            Title = "Scarface",
                            genre = "Action"
                        },
                        new
                        {
                            GenreId = 4,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 4,
                            RenterId = 4,
                            Title = "Titanic",
                            genre = "Drama"
                        },
                        new
                        {
                            GenreId = 5,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 3,
                            RenterId = 2,
                            Title = "A Silent Voice",
                            genre = "Anime"
                        },
                        new
                        {
                            GenreId = 6,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 5,
                            RenterId = 2,
                            Title = "Breaking Bad Season 1",
                            genre = "Tv/Action"
                        },
                        new
                        {
                            GenreId = 7,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 1,
                            RenterId = 5,
                            Title = "Good Will Hunting",
                            genre = "Drama"
                        },
                        new
                        {
                            GenreId = 8,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 3,
                            RenterId = 5,
                            Title = "50 First Dates",
                            genre = "Romantic Comedy"
                        },
                        new
                        {
                            GenreId = 9,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 4,
                            RenterId = 3,
                            Title = "Halloween",
                            genre = "Horror"
                        },
                        new
                        {
                            GenreId = 10,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateId = 5,
                            RenterId = 3,
                            Title = "Talladega Nights",
                            genre = "Comedy"
                        });
                });

            modelBuilder.Entity("GenreSchedule.Models.Renter", b =>
                {
                    b.Property<int>("RenterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("RenterId");

                    b.ToTable("Renters");

                    b.HasData(
                        new
                        {
                            RenterId = 1,
                            FirstName = "Anne",
                            LastName = "Sullivan"
                        },
                        new
                        {
                            RenterId = 2,
                            FirstName = "Maria",
                            LastName = "Montessori"
                        },
                        new
                        {
                            RenterId = 3,
                            FirstName = "Martin Luther",
                            LastName = "King"
                        },
                        new
                        {
                            RenterId = 4,
                            FirstName = "",
                            LastName = "Aristotle"
                        },
                        new
                        {
                            RenterId = 5,
                            FirstName = "Jaime",
                            LastName = "Escalante"
                        });
                });

            modelBuilder.Entity("GenreSchedule.Models.Genre", b =>
                {
                    b.HasOne("GenreSchedule.Models.Date", null)
                        .WithMany("Genres")
                        .HasForeignKey("DateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenreSchedule.Models.Renter", "Renter")
                        .WithMany("genres")
                        .HasForeignKey("RenterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
